name: build and deploy spring-api
on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    name: build and deploy spring-api
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup jdk 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17

      - name: unit tests
        run: mvn -B test --file pom.xml
      
    #   - name: SonarQube Scan
    #     uses: kitabisa/sonarqube-action@v1.2.0
    #     env:
    #       SONAR_SCANNER_OPTS: -X
    #     with:
    #       host: ${{ secrets.SONARQUBE_HOST }}
    #       login: ${{ secrets.SONARQUBE_TOKEN }}
    #       projectBaseDir: "src/"
    #       projectKey: "my-custom-project"
        
       
      - name: build the app
        run: |
          mvn clean
          mvn -B package --file pom.xml

      - name: build the docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/rest-api:v1.0.0

      - name: login to docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: push the docker image to docker hub
        uses: docker/build-push-action@v4
        with:
          context: .
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/rest-api:v1.0.0
    
      - name: Notify Slack (Success)
        env:
          BUILD_NUMBER: ${{ github.run_number }}
        run: |
           curl -X POST -H 'Content-type: application/json' --data "{
           \"text\": \"‚úÖ Deployment to *prod* succeeded!!\nüõ†Ô∏è Build Number: $BUILD_NUMBER\",
           \"username\": \"CI Bot\",
           \"icon_emoji\": \":robot_face:\"
           }" ${{ secrets.SLACK_WEBHOOK_URL }}
